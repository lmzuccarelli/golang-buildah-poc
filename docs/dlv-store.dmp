(dlv) print store
Sending output to pager...
github.com/containers/storage.Store(*github.com/containers/storage.store) *{
	runRoot: "/run/user/1000/containers",
	graphDriverName: "overlay",
	graphDriverPriority: []string len: 0, cap: 0, nil,
	graphLock: *github.com/containers/storage/pkg/lockfile.LockFile {
		file: "/home/lzuccarelli/.local/share/containers/storage/storage.lock",
		ro: false,
		rwMutex: *(*sync.RWMutex)(0xc00016c000),
		stateMutex: *(*sync.Mutex)(0xc000530040),
		counter: 0,
		lw: (*"github.com/containers/storage/pkg/lockfile.LastWrite")(0xc000406030),
		lockType: writeLock (1),
		locked: false,
		fd: 3,},
	usernsLock: *github.com/containers/storage/pkg/lockfile.LockFile {
		file: "/home/lzuccarelli/.local/share/containers/storage/userns.lock",
		ro: false,
		rwMutex: *(*sync.RWMutex)(0xc00016c120),
		stateMutex: *(*sync.Mutex)(0xc000530048),
		counter: 0,
		lw: (*"github.com/containers/storage/pkg/lockfile.LastWrite")(0xc0004061b0),
		lockType: writeLock (1),
		locked: false,
		fd: 0,},
	graphRoot: "/home/lzuccarelli/.local/share/containers/storage",
	graphOptions: []string len: 0, cap: 0, nil,
	imageStoreDir: "",
	pullOptions: map[string]string nil,
	uidMap: []github.com/containers/storage/pkg/idtools.IDMap len: 0, cap: 0, nil,
	gidMap: []github.com/containers/storage/pkg/idtools.IDMap len: 0, cap: 0, nil,
	autoUsernsUser: "",
	autoNsMinSize: 1024,
	autoNsMaxSize: 65536,
	imageStore: github.com/containers/storage.rwImageStore(*github.com/containers/storage.imageStore) *{
		lockfile: *(*"github.com/containers/storage/pkg/lockfile.LockFile")(0xc000406360),
		dir: "/home/lzuccarelli/.local/share/containers/storage/overlay-images",
		inProcessLock: (*sync.RWMutex)(0xc00051e098),
		lastWrite: (*"github.com/containers/storage/pkg/lockfile.LastWrite")(0xc00051e0b0),
		images: []*github.com/containers/storage.Image len: 82, cap: 128, [
			*(*"github.com/containers/storage.Image")(0xc000002000),
			*(*"github.com/containers/storage.Image")(0xc0000020f0),
			*(*"github.com/containers/storage.Image")(0xc0000021e0),
			*(*"github.com/containers/storage.Image")(0xc0000022d0),
			*(*"github.com/containers/storage.Image")(0xc0000023c0),
			*(*"github.com/containers/storage.Image")(0xc0000024b0),
			*(*"github.com/containers/storage.Image")(0xc0000025a0),
			*(*"github.com/containers/storage.Image")(0xc000002690),
			*(*"github.com/containers/storage.Image")(0xc000002780),
			*(*"github.com/containers/storage.Image")(0xc000002870),
			*(*"github.com/containers/storage.Image")(0xc000002960),
			*(*"github.com/containers/storage.Image")(0xc000002a50),
			*(*"github.com/containers/storage.Image")(0xc000002b40),
			*(*"github.com/containers/storage.Image")(0xc000002c30),
			*(*"github.com/containers/storage.Image")(0xc000002d20),
			*(*"github.com/containers/storage.Image")(0xc000002e10),
			*(*"github.com/containers/storage.Image")(0xc000002f00),
			*(*"github.com/containers/storage.Image")(0xc000002ff0),
			*(*"github.com/containers/storage.Image")(0xc0000030e0),
			*(*"github.com/containers/storage.Image")(0xc0000031d0),
			*(*"github.com/containers/storage.Image")(0xc0000032c0),
			*(*"github.com/containers/storage.Image")(0xc0000033b0),
			*(*"github.com/containers/storage.Image")(0xc0000034a0),
			*(*"github.com/containers/storage.Image")(0xc000003590),
			*(*"github.com/containers/storage.Image")(0xc000003680),
			*(*"github.com/containers/storage.Image")(0xc000003770),
			*(*"github.com/containers/storage.Image")(0xc000003860),
			*(*"github.com/containers/storage.Image")(0xc000003950),
			*(*"github.com/containers/storage.Image")(0xc000003a40),
			*(*"github.com/containers/storage.Image")(0xc000003b30),
			*(*"github.com/containers/storage.Image")(0xc000003c20),
			*(*"github.com/containers/storage.Image")(0xc000003d10),
			*(*"github.com/containers/storage.Image")(0xc000003e00),
			*(*"github.com/containers/storage.Image")(0xc000022000),
			*(*"github.com/containers/storage.Image")(0xc0000220f0),
			*(*"github.com/containers/storage.Image")(0xc0000221e0),
			*(*"github.com/containers/storage.Image")(0xc0000222d0),
			*(*"github.com/containers/storage.Image")(0xc0000223c0),
			*(*"github.com/containers/storage.Image")(0xc0000224b0),
			*(*"github.com/containers/storage.Image")(0xc0000225a0),
			*(*"github.com/containers/storage.Image")(0xc000022690),
			*(*"github.com/containers/storage.Image")(0xc000022780),
			*(*"github.com/containers/storage.Image")(0xc000022870),
			*(*"github.com/containers/storage.Image")(0xc000022960),
			*(*"github.com/containers/storage.Image")(0xc000022a50),
			*(*"github.com/containers/storage.Image")(0xc000022b40),
			*(*"github.com/containers/storage.Image")(0xc000022c30),
			*(*"github.com/containers/storage.Image")(0xc000022d20),
			*(*"github.com/containers/storage.Image")(0xc000022e10),
			*(*"github.com/containers/storage.Image")(0xc000022f00),
			*(*"github.com/containers/storage.Image")(0xc000022ff0),
			*(*"github.com/containers/storage.Image")(0xc0000230e0),
			*(*"github.com/containers/storage.Image")(0xc0000231d0),
			*(*"github.com/containers/storage.Image")(0xc0000232c0),
			*(*"github.com/containers/storage.Image")(0xc0000233b0),
			*(*"github.com/containers/storage.Image")(0xc0000234a0),
			*(*"github.com/containers/storage.Image")(0xc000023590),
			*(*"github.com/containers/storage.Image")(0xc000023680),
			*(*"github.com/containers/storage.Image")(0xc000023770),
			*(*"github.com/containers/storage.Image")(0xc000023860),
			*(*"github.com/containers/storage.Image")(0xc000023950),
			*(*"github.com/containers/storage.Image")(0xc000023a40),
			*(*"github.com/containers/storage.Image")(0xc000023b30),
			*(*"github.com/containers/storage.Image")(0xc000023c20),
			...+18 more
		],
		idindex: *(*"github.com/containers/storage/pkg/truncindex.TruncIndex")(0xc0001ca9c0),
		byid: map[string]*github.com/containers/storage.Image [...],
		byname: map[string]*github.com/containers/storage.Image [...],
		bydigest: map[github.com/opencontainers/go-digest.Digest][]*github.com/containers/storage.Image [...],},
	rwImageStores: []github.com/containers/storage.rwImageStore len: 1, cap: 1, [
		...,
	],
	roImageStores: []github.com/containers/storage.roImageStore len: 0, cap: 0, nil,
	containerStore: github.com/containers/storage.rwContainerStore(*github.com/containers/storage.containerStore) *{
		lockfile: *(*"github.com/containers/storage/pkg/lockfile.LockFile")(0xc000406600),
		dir: "/home/lzuccarelli/.local/share/containers/storage/overlay-contai...+4 more",
		jsonPath: [2]string [
			"/home/lzuccarelli/.local/share/containers/storage/overlay-contai...+20 more",
			"/home/lzuccarelli/.local/share/containers/storage/overlay-contai...+29 more",
		],
		inProcessLock: (*sync.RWMutex)(0xc0003bd4d8),
		lastWrite: (*"github.com/containers/storage/pkg/lockfile.LastWrite")(0xc0003bd4f0),
		containers: []*github.com/containers/storage.Container len: 0, cap: 0, [],
		idindex: *(*"github.com/containers/storage/pkg/truncindex.TruncIndex")(0xc00013e060),
		byid: map[string]*github.com/containers/storage.Container [],
		bylayer: map[string]*github.com/containers/storage.Container [],
		byname: map[string]*github.com/containers/storage.Container [],},
	digestLockRoot: "/run/user/1000/containers/overlay-locks",
	disableVolatile: false,
	transientStore: false,
	graphLockLastWrite: github.com/containers/storage/pkg/lockfile.LastWrite {
		state: []uint8 len: 64, cap: 64, [77,118,45,198,247,158,250,23,26,0,0,0,0,0,0,0,71,100,0,0,43,81,51,34,245,167,20,61,40,30,19,16,97,99,103,16,221,88,230,104,239,73,235,182,194,105,170,
187,72,64,183,32,9,160,212,52,43,57,2,240,18,241,65,114],},
	graphDriver: github.com/containers/storage/drivers.Driver(*github.com/containers/storage/drivers/overlay.Driver) *{
		name: "overlay",
		home: "/home/lzuccarelli/.local/share/containers/storage/overlay",
		runhome: "/run/user/1000/containers/overlay",
		imageStore: "",
		ctr: *(*"github.com/containers/storage/drivers.RefCounter")(0xc000540000),
		quotaCtl: *github.com/containers/storage/drivers/quota.Control nil,
		options: (*"github.com/containers/storage/drivers/overlay.overlayOptions")(0xc00054e170),
		naiveDiff: github.com/containers/storage/drivers.DiffDriver(*github.com/containers/storage/drivers.NaiveDiffDriver) ...,
		supportsDType: true,
		supportsVolatile: *bool nil,
		usingMetacopy: false,
		usingComposefs: false,
		stagingDirsLocks: map[string]*github.com/containers/storage/pkg/lockfile.LockFile [],
		supportsIDMappedMounts: *bool nil,},
	layerStoreUseGetters: github.com/containers/storage.rwLayerStore nil,
	roLayerStoresUseGetters: []github.com/containers/storage.roLayerStore len: 0, cap: 0, nil,
	additionalUIDs: *github.com/containers/storage.idSet nil,
	additionalGIDs: *github.com/containers/storage.idSet nil,}
